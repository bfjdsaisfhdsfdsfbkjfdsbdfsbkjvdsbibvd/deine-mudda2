-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MuteToggleGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Position = UDim2.new(0.9, -25, 0.1, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ToggleButton.Text = "ðŸŽ¤"
ToggleButton.TextSize = 25
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.BorderSizePixel = 0
ToggleButton.AutoButtonColor = true
ToggleButton.Parent = ScreenGui

-- Make it circular
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = ToggleButton

local exceptions = {
    "Xeni_He7",
    "YournothimbuddyXD",
    "BloxiAstra"
}

local isMuted = false

local function isException(playerName)
    for _, name in pairs(exceptions) do
        if name == playerName then
            return true
        end
    end
    return false
end

-- Function to update mute status
local function updateMute()
    if isMuted then
        -- Mute non-friends who aren't exceptions
        for _, v in pairs(game:GetService("Players"):GetPlayers()) do
            local audio = v:FindFirstChild("AudioDeviceInput")
            if audio then
                if not v:IsFriendsWith(game.Players.LocalPlayer.UserId) and not isException(v.Name) and v.Name ~= game.Players.LocalPlayer.Name then
                    audio.Muted = true
                    print("is not friend")
                end
            end
        end
    else
        -- Unmute everyone
        for _, v in pairs(game:GetService("Players"):GetPlayers()) do
            local audio = v:FindFirstChild("AudioDeviceInput")
            if audio then
                audio.Muted = false
            end
        end
    end
end

-- Toggle function
ToggleButton.MouseButton1Click:Connect(function()
    isMuted = not isMuted
    
    -- Visual feedback
    if isMuted then
        ToggleButton.TextColor3 = Color3.fromRGB(255, 80, 80)
        ToggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    else
        ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    end
    
    updateMute()
end)

-- Update mute when new players join (only if mute is active)
game:GetService("Players").PlayerAdded:Connect(function(player)
    wait(1) -- Wait for AudioDeviceInput to load
    if isMuted then
        local audio = player:FindFirstChild("AudioDeviceInput")
        if audio then
            if not player:IsFriendsWith(game.Players.LocalPlayer.UserId) and not isException(player.Name) and player.Name ~= game.Players.LocalPlayer.Name then
                audio.Muted = true
                print("is not friend")
            end
        end
    end
end)
